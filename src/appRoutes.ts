export interface TOCItem {
  id: string;
  title: string;
  path: string; // For React Router Link or direct href for static
  type: 'react' | 'static';
  children?: TOCItem[];
  isInitiallyExpanded?: boolean; // For ToC state
}

// Manually defined routes for the React application part of the ToC
// The `id` should be unique.
// The `path` for React routes should match the path defined in App.tsx routes.
// The `path` for static routes will be generated by `generate-static-toc.js`
// and should be relative to the `VITE_APP_BASE_URL` (e.g., 'EXPRESS/example-static-site/index.html')

export const reactAppRoutes: TOCItem[] = [
  {
    id: 'home',
    title: 'Home',
    path: '/',
    type: 'react',
  },
  {
    id: 'career-proposal',
    title: 'Career Proposal',
    path: '/career/proposal',
    type: 'react',
  },
  {
    id: 'ai-workflow-proposal',
    title: 'AI Workflow Proposal',
    path: '/proposal',
    type: 'react',
  },
  // Add other React app routes here
  // Example of a nested route:
  // {
  //   id: 'features',
  //   title: 'Features',
  //   path: '/features', // Parent path, might not be a direct link
  //   type: 'react',
  //   isInitiallyExpanded: true,
  //   children: [
  //     {
  //       id: 'feature-x',
  //       title: 'Feature X',
  //       path: '/features/x',
  //       type: 'react',
  //     },
  //   ],
  // },
];

// Static content routes will be populated from src/toc-static-data.json
